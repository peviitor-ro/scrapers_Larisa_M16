{"name": "Test job links from the c4media website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job links: ['https://c4media.com/open-positions/administrative-assistant-(full-time,-remote,-romania)/27', 'https://c4media.com/open-positions/senior-editorial-software-community-manager-(editor-in-chief)/26']", "trace": "get_job_details = (([], [], [], [], []), (['Senior Editorial Software Community Manager (Editor-in-Chief)', 'Administrative Assistant (f...en-positions/administrative-assistant-(full-time,-remote,-romania)/27'], ['C4Media', 'C4Media'], ['remote', 'remote']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_c4media_link_api(get_job_details):\n        allure.dynamic.title(f\"Test job links from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job links from the scraper\"):\n            job_links_scraper = sorted(scraped_jobs_data[3])\n        with allure.step(\"Step 2: Get job links from the Peviitor API\"):\n            job_links_peviitor = sorted(peviitor_jobs_data[3])\n    \n        with allure.step(\"Step 3: Compare job links from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Scraper Expected Results: {job_links_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Peviitor Actual Results: {job_links_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_links(job_links_scraper, job_links_peviitor)\n\ntests/Test_API_Suite/test_c4media.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fb5a8076da0>, expected_links = []\nactual_links = ['https://c4media.com/open-positions/administrative-assistant-(full-time,-remote,-romania)/27', 'https://c4media.com/open-positions/senior-editorial-software-community-manager-(editor-in-chief)/26']\n\n    def check_job_links(self, expected_links, actual_links):\n        missing_links = self.get_missing_items(expected_links, actual_links)\n    \n        if missing_links:\n            msg = f\"Peviitor is having extra job links: {missing_links}\"\n        else:\n            missing_links = self.get_missing_items(actual_links, expected_links)\n            msg = f\"Peviitor is missing job links: {missing_links}\"\n    \n        if not expected_links and not actual_links:\n            msg = f\"Scraper is not grabbing any job links\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_links == actual_links, msg\nE       AssertionError: Peviitor is missing job links: ['https://c4media.com/open-positions/administrative-assistant-(full-time,-remote,-romania)/27', 'https://c4media.com/open-positions/senior-editorial-software-community-manager-(editor-in-chief)/26']\n\ntests/utils.py:234: AssertionError"}, "steps": [{"name": "Step 1: Get job links from the scraper", "status": "passed", "start": 1712466967162, "stop": 1712466967162}, {"name": "Step 2: Get job links from the Peviitor API", "status": "passed", "start": 1712466967162, "stop": 1712466967162}, {"name": "Step 3: Compare job links from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job links: ['https://c4media.com/open-positions/administrative-assistant-(full-time,-remote,-romania)/27', 'https://c4media.com/open-positions/senior-editorial-software-community-manager-(editor-in-chief)/26']\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_c4media.py\", line 126, in test_c4media_link_api\n    TestUtils().check_job_links(job_links_scraper, job_links_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 234, in check_job_links\n    assert expected_links == actual_links, msg\n"}, "attachments": [{"name": "Expected Results", "source": "24e2bb05-c63e-4079-9d89-b58044695e63-attachment.attach"}, {"name": "Actual Results", "source": "e8129672-fd82-4aab-a907-a8a361457469-attachment.attach"}], "start": 1712466967162, "stop": 1712466967162}], "start": 1712466967161, "stop": 1712466967162, "uuid": "1fb10482-9089-49f0-8fcd-9d754c9a6ad5", "historyId": "d5604bc5e30f003f7c793442c82014ab", "testCaseId": "d5604bc5e30f003f7c793442c82014ab", "fullName": "Test_API_Suite.test_c4media#test_c4media_link_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_c4media"}, {"name": "host", "value": "fv-az1202-671"}, {"name": "thread", "value": "2057-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_c4media"}]}