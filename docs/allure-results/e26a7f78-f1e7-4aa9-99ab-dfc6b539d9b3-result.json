{"name": "Test job countries from the corteva website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job countries: []", "trace": "get_job_details = ((['Area Sales Manager', 'Commercial Effectiveness Manager Romania and Moldova', 'Category Marketing Manager for Insec...reers.corteva.com//job-en/19338324/category-marketing-manager-for-insecticides-and-fungicides-romania-bucharest-ro/']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_corteva_country_api(get_job_details):\n        allure.dynamic.title(f\"Test job countries from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job countries from the scraper\"):\n            job_countries_scraper = sorted(scraped_jobs_data[2])\n        with allure.step(\"Step 2: Get job countries from the Peviitor API\"):\n            job_countries_peviitor = sorted(peviitor_jobs_data[2])\n    \n        with allure.step(\"Step 3: Compare job countries from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_countries_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_countries_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor)\n\ntests/Test_API_Suite/test_corteva.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f5c465da6b0>\nexpected_countries = ['România', 'România', 'România', 'România']\nactual_countries = ['România', 'România', 'România']\n\n    def check_job_countries(self, expected_countries, actual_countries):\n        missing_countries = self.get_missing_items(expected_countries, actual_countries)\n    \n        if missing_countries:\n            msg = f\"Peviitor is having extra job countries: {missing_countries}\"\n        else:\n            missing_countries = self.get_missing_items(actual_countries, expected_countries)\n            msg = f\"Peviitor is missing job countries: {missing_countries}\"\n    \n        if not expected_countries and not actual_countries:\n            msg = f\"Scraper is not grabbing any job countries\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_countries == actual_countries, msg\nE       AssertionError: Peviitor is missing job countries: []\n\ntests/utils.py:132: AssertionError"}, "steps": [{"name": "Step 1: Get job countries from the scraper", "status": "passed", "start": 1705675760804, "stop": 1705675760804}, {"name": "Step 2: Get job countries from the Peviitor API", "status": "passed", "start": 1705675760804, "stop": 1705675760804}, {"name": "Step 3: Compare job countries from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job countries: []\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_corteva.py\", line 69, in test_corteva_country_api\n    TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 132, in check_job_countries\n    assert expected_countries == actual_countries, msg\n"}, "attachments": [{"name": "Expected Results", "source": "0ef3a0a2-9caa-4564-9490-c16df007f97a-attachment.attach"}, {"name": "Actual Results", "source": "2a55a238-dc8a-4764-87ca-b1b8402e9503-attachment.attach"}], "start": 1705675760804, "stop": 1705675760805}], "attachments": [{"name": "log", "source": "279d7f8b-ea74-47f9-888f-1e389fbf5944-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "8364ef55-ec01-46da-8b77-69b4fa4f28a5-attachment.txt", "type": "text/plain"}], "start": 1705675760804, "stop": 1705675760805, "uuid": "8a6b66c1-9a5a-4577-bde5-45e3a6130833", "historyId": "a35c9d381b1294ae9b8ad59a7e3d22e9", "testCaseId": "a35c9d381b1294ae9b8ad59a7e3d22e9", "fullName": "Test_API_Suite.test_corteva#test_corteva_country_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_corteva"}, {"name": "host", "value": "fv-az1204-286"}, {"name": "thread", "value": "1967-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_corteva"}]}