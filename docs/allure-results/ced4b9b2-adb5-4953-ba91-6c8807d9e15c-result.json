{"name": "Test job cities from the jumbo website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Scraper is not grabbing any job cities", "trace": "get_job_details = (([], [], [], [], []), ([], [], [], [], [], []))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_jumbo_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities from the scraper\"):\n            job_cities_scraper = scraped_jobs_data[1]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job cities from the Peviitor API\"):\n            job_cities_peviitor = peviitor_jobs_data[1]\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper)\n\ntests/Test_API_Suite/test_jumbo.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fe825dea0b0>, expected_cities = []\nactual_cities = [], job_titles_scraper = []\n\n    def check_job_cities(self, expected_cities, actual_cities, job_titles_scraper):\n        if not expected_cities and not actual_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Scraper is not grabbing any job cities\n\ntests/utils.py:130: AssertionError"}, "steps": [{"name": "Step 1: Get job cities from the scraper", "status": "passed", "start": 1706764351242, "stop": 1706764351242}, {"name": "Step 2: Get job cities from the Peviitor API", "status": "passed", "start": 1706764351242, "stop": 1706764351242}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Scraper is not grabbing any job cities\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_jumbo.py\", line 70, in test_jumbo_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 130, in check_job_cities\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "8196bb86-dc92-4563-bb74-81e2051fdfd5-attachment.attach"}, {"name": "Actual Results", "source": "51b8c239-4ad7-4c8b-b30e-03108e33e7ab-attachment.attach"}], "start": 1706764351242, "stop": 1706764351243}], "start": 1706764351242, "stop": 1706764351243, "uuid": "5aba6314-86fd-47d9-a1da-e53f5204a65c", "historyId": "c263ede1984886a5d49c845b4a49198d", "testCaseId": "c263ede1984886a5d49c845b4a49198d", "fullName": "Test_API_Suite.test_jumbo#test_jumbo_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_jumbo"}, {"name": "host", "value": "fv-az1566-267"}, {"name": "thread", "value": "1907-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_jumbo"}]}