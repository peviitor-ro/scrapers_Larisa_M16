{"name": "Test job titles from the bunge website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job titles: ['Junior VAT Process Executive with German']", "trace": "get_job_details = ((['Bunge Romania Opportunities', 'VAT Specialist with Hungarian', 'Contract Administrator- Bucharest', 'Reliability M...e', 'Bunge', 'Bunge', 'Bunge', 'Bunge', ...], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_bunge_title_api(get_job_details):\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(peviitor_jobs_data[0])\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_titles_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_titles_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_bunge.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f1fc38a5240>\nexpected_titles = ['Bunge Romania Opportunities', 'Contract Administrator- Bucharest', 'Jr. Engineer', 'Maintenance & Utilities Manager- Lehliu', 'Reliability Manager- Lehliu Plant', 'VAT Specialist with Hungarian']\nactual_titles = ['Bunge Romania Opportunities', 'Contract Administrator- Bucharest', 'Jr. Engineer', 'Junior VAT Process Executive with German', 'Maintenance & Utilities Manager- Lehliu', 'Reliability Manager- Lehliu Plant', ...]\n\n    def check_job_titles(self, expected_titles, actual_titles):\n        missing_titles = self.get_missing_items(expected_titles, actual_titles)\n    \n        if missing_titles:\n            msg = f\"Peviitor is having extra job titles: {missing_titles}\"\n        else:\n            missing_titles = self.get_missing_items(actual_titles, expected_titles)\n            msg = f\"Peviitor is missing job titles: {missing_titles}\"\n    \n        if not expected_titles and not actual_titles:\n            msg = f\"Scraper is not grabbing any job titles\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_titles == actual_titles, msg\nE       AssertionError: Peviitor is missing job titles: ['Junior VAT Process Executive with German']\n\ntests/utils.py:123: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1706850751608, "stop": 1706850751608}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1706850751608, "stop": 1706850751608}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job titles: ['Junior VAT Process Executive with German']\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_bunge.py\", line 52, in test_bunge_title_api\n    TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 123, in check_job_titles\n    assert expected_titles == actual_titles, msg\n"}, "attachments": [{"name": "Expected Results", "source": "3215331e-7e77-4389-87af-573fc5ff773e-attachment.attach"}, {"name": "Actual Results", "source": "3ffe24e2-2c5a-44be-bdf8-95e87a6c54ca-attachment.attach"}], "start": 1706850751608, "stop": 1706850751608}], "start": 1706850751608, "stop": 1706850751608, "uuid": "40f1bd0b-bc3b-4d74-9ec4-a875af15e778", "historyId": "eb6242f1a919ccb43f26701baea590a7", "testCaseId": "eb6242f1a919ccb43f26701baea590a7", "fullName": "Test_API_Suite.test_bunge#test_bunge_title_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_bunge"}, {"name": "host", "value": "fv-az572-945"}, {"name": "thread", "value": "1916-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_bunge"}]}