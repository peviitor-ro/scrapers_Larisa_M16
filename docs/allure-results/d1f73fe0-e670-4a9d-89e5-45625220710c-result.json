{"name": "Test job links from the emia website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job links: ['https://bengenro.bamboohr.com/careers/125', 'https://bengenro.bamboohr.com/careers/129', 'https://bengenro.bamboohr.com/careers/131']", "trace": "get_job_details = ((['Infrastructure Engineer', 'Junior IT Sales Specialist', 'Junior Customer Success Specialist', 'Sales Support Admin...astructure Engineer'], [['Bucuresti']], ['Romania'], ['https://bengenro.bamboohr.com/jobs/view.php?id=105'], ['Emia']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_emia_link_api(get_job_details):\n        allure.dynamic.title(f\"Test job links from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job links from the scraper\"):\n            job_links_scraper = sorted(scraped_jobs_data[3])\n        with allure.step(\"Step 2: Get job links from the Peviitor API\"):\n            job_links_peviitor = sorted(peviitor_jobs_data[3])\n    \n        with allure.step(\"Step 3: Compare job links from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_links_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_links_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_links(job_links_scraper, job_links_peviitor)\n\ntests/Test_API_Suite/test_emia.py:103: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f73dab4f760>\nexpected_links = ['https://bengenro.bamboohr.com/careers/125', 'https://bengenro.bamboohr.com/careers/129', 'https://bengenro.bamboohr.com/careers/131', 'https://bengenro.bamboohr.com/jobs/view.php?id=105']\nactual_links = ['https://bengenro.bamboohr.com/jobs/view.php?id=105']\n\n    def check_job_links(self, expected_links, actual_links):\n        missing_links = self.get_missing_items(expected_links, actual_links)\n    \n        if missing_links:\n            msg = f\"Peviitor is having extra job links: {missing_links}\"\n        else:\n            missing_links = self.get_missing_items(actual_links, expected_links)\n            msg = f\"Peviitor is missing job links: {missing_links}\"\n    \n        if not expected_links and not actual_links:\n            msg = f\"Scraper is not grabbing any job links\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_links == actual_links, msg\nE       AssertionError: Peviitor is having extra job links: ['https://bengenro.bamboohr.com/careers/125', 'https://bengenro.bamboohr.com/careers/129', 'https://bengenro.bamboohr.com/careers/131']\n\ntests/utils.py:158: AssertionError"}, "steps": [{"name": "Step 1: Get job links from the scraper", "status": "passed", "start": 1706505194555, "stop": 1706505194555}, {"name": "Step 2: Get job links from the Peviitor API", "status": "passed", "start": 1706505194555, "stop": 1706505194555}, {"name": "Step 3: Compare job links from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job links: ['https://bengenro.bamboohr.com/careers/125', 'https://bengenro.bamboohr.com/careers/129', 'https://bengenro.bamboohr.com/careers/131']\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_emia.py\", line 103, in test_emia_link_api\n    TestUtils().check_job_links(job_links_scraper, job_links_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 158, in check_job_links\n    assert expected_links == actual_links, msg\n"}, "attachments": [{"name": "Expected Results", "source": "bc9a0095-d2ce-48bd-9c71-ce7afe439e57-attachment.attach"}, {"name": "Actual Results", "source": "0d1857a3-1402-478f-8e23-8a34f4ab3a94-attachment.attach"}], "start": 1706505194555, "stop": 1706505194555}], "start": 1706505194555, "stop": 1706505194555, "uuid": "b4110cd9-331e-448a-9e9c-4e1855f74c15", "historyId": "6c5765b564a6cc2cff99b9160c156389", "testCaseId": "6c5765b564a6cc2cff99b9160c156389", "fullName": "Test_API_Suite.test_emia#test_emia_link_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_emia"}, {"name": "host", "value": "fv-az1109-305"}, {"name": "thread", "value": "1941-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_emia"}]}