{"name": "Test number of jobs for the company autototal against the number of jobs Peviitor", "status": "failed", "statusDetails": {"message": "AssertionError: Company website contains more jobs than on peviitor", "trace": "get_job_details = (['Lucrator comercial in depozit (picker) – Targoviste/ Suceava', 'Sofer (distributie) – Bacau', 'Stivuitorist – depoz...tributii-de-lucrator-comercial-picker-lugoj/', ...], ['onsite', 'onsite', 'onsite', 'onsite', 'onsite', 'onsite', ...])\nscrape_ui = (<tests.Test_Selenium_Suite.seleniumutils.TestUtils object at 0x7fbffe7c3fa0>, (['Consilier Tehnic Vanzari – Piese Cam...2f44056a177165053e2b8d\", element=\"f.76F38AD0029B69C42286678AD9028FA4.d.CC7B684D3BB82BF5D90A6CAE5F0D0BAA.e.58\")>], ...))\n\n    @pytest.mark.regression\n    @pytest.mark.ui\n    def test_autototal_job_count_ui(get_job_details, scrape_ui):\n        allure.dynamic.title(f\"Test number of jobs for the company {company_name} against the number of jobs Peviitor\")\n    \n        scraped_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job links from the scraper\"):\n            job_links_scraper = len(scraped_jobs_data[3])\n        with allure.step(\"Step 2: Get job links from the Peviitor\"):\n            # Grab the data from peviitor ui\n            testutils, job_details = scrape_ui[0], scrape_ui[1]\n            job_links_peviitor = len(job_details[2])\n    \n        with allure.step(f\"Step 3: Compare number of jobs for the company {company_name} against the number of jobs Peviitor\"):\n            allure.attach(f\"Expected Results: {job_links_scraper}\", name=\"Scraper Expected Results\")\n            allure.attach(f\"Actual Results: {job_links_peviitor}\", name=\"Peviitor Actual Results\")\n>           testutils.check_job_count(job_links_scraper, job_links_peviitor)\n\ntests/Test_Selenium_Suite/test_autototal.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.Test_Selenium_Suite.seleniumutils.TestUtils object at 0x7fbffe7c3fa0>\nexpected_links_count = 11, actual_links_count = 1\n\n    def check_job_count(self, expected_links_count, actual_links_count):\n    \n        if not expected_links_count and not actual_links_count:\n            msg = f\"Scraper is not grabbing any job links\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        if expected_links_count < actual_links_count:\n            msg = f\"Peviitor is having extra jobs not available on company website\"\n        else:\n            msg = f\"Company website contains more jobs than on peviitor\"\n    \n        allure.step(msg)\n>       assert expected_links_count == actual_links_count, msg\nE       AssertionError: Company website contains more jobs than on peviitor\n\ntests/Test_Selenium_Suite/seleniumutils.py:301: AssertionError"}, "steps": [{"name": "Step 1: Get job links from the scraper", "status": "passed", "start": 1710998151406, "stop": 1710998151406}, {"name": "Step 2: Get job links from the Peviitor", "status": "passed", "start": 1710998151406, "stop": 1710998151406}, {"name": "Step 3: Compare number of jobs for the company autototal against the number of jobs Peviitor", "status": "failed", "statusDetails": {"message": "AssertionError: Company website contains more jobs than on peviitor\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_Selenium_Suite/test_autototal.py\", line 51, in test_autototal_job_count_ui\n    testutils.check_job_count(job_links_scraper, job_links_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_Selenium_Suite/seleniumutils.py\", line 301, in check_job_count\n    assert expected_links_count == actual_links_count, msg\n"}, "attachments": [{"name": "Scraper Expected Results", "source": "d4315eae-d779-48e1-87e1-b8651b392225-attachment.attach"}, {"name": "Peviitor Actual Results", "source": "c98b2514-bd9d-4bb7-b2f2-8c6f73dde8b4-attachment.attach"}], "start": 1710998151406, "stop": 1710998151407}], "start": 1710998151406, "stop": 1710998151407, "uuid": "db57e972-5780-4eb7-a72c-39949b4f0bf5", "historyId": "9f4f9c4dc6cb0c341ec1f65ce7c80c92", "testCaseId": "9f4f9c4dc6cb0c341ec1f65ce7c80c92", "fullName": "Test_Selenium_Suite.test_autototal#test_autototal_job_count_ui", "labels": [{"name": "tag", "value": "ui"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_Selenium_Suite"}, {"name": "suite", "value": "test_autototal"}, {"name": "host", "value": "fv-az1491-530"}, {"name": "thread", "value": "2024-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Selenium_Suite.test_autototal"}]}