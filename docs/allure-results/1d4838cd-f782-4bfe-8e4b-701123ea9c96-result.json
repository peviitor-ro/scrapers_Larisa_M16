{"name": "Test job cities from the emia website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job cities for the following titles: ['Junior IT Sales Specialist', 'Junior Customer Success Specialist', 'Sales Support Admin']", "trace": "get_job_details = ((['Infrastructure Engineer', 'Junior IT Sales Specialist', 'Junior Customer Success Specialist', 'Sales Support Admin...1']), (['Infrastructure Engineer'], [], ['Romania'], ['https://bengenro.bamboohr.com/jobs/view.php?id=105'], ['Emia']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_emia_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities from the scraper\"):\n            job_cities_scraper = scraped_jobs_data[1]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job cities from the Peviitor API\"):\n            job_cities_peviitor = peviitor_jobs_data[1]\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper)\n\ntests/Test_API_Suite/test_emia.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fa06c14caf0>\nexpected_cities = [['Bucuresti'], ['Bucuresti'], ['Bucuresti']]\nactual_cities = []\njob_titles_scraper = ['Infrastructure Engineer', 'Junior IT Sales Specialist', 'Junior Customer Success Specialist', 'Sales Support Admin']\n\n    def check_job_cities(self, expected_cities, actual_cities, job_titles_scraper):\n        if not expected_cities and not actual_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        # Setting dummy job titles for popping to not influence other tests\n        dummy_job_titles = job_titles_scraper[:]\n        missing_cities = self.get_different_items(expected_cities, actual_cities, dummy_job_titles)\n        msg = \"An unknown error occured\"\n    \n        if missing_cities:\n            msg = f\"Peviitor is having extra job cities for the following titles: {missing_cities[1]}\"\n        else:\n            missing_cities = self.get_different_items(actual_cities, expected_cities, dummy_job_titles)\n            if missing_cities:\n                msg = f\"Peviitor is missing job cities: {missing_cities[1]}\"\n    \n        allure.step(msg)\n>       assert expected_cities == actual_cities, msg\nE       AssertionError: Peviitor is having extra job cities for the following titles: ['Junior IT Sales Specialist', 'Junior Customer Success Specialist', 'Sales Support Admin']\n\ntests/utils.py:143: AssertionError"}, "steps": [{"name": "Step 1: Get job cities from the scraper", "status": "passed", "start": 1706677945767, "stop": 1706677945767}, {"name": "Step 2: Get job cities from the Peviitor API", "status": "passed", "start": 1706677945767, "stop": 1706677945767}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job cities for the following titles: ['Junior IT Sales Specialist', 'Junior Customer Success Specialist', 'Sales Support Admin']\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_emia.py\", line 72, in test_emia_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 143, in check_job_cities\n    assert expected_cities == actual_cities, msg\n"}, "attachments": [{"name": "Expected Results", "source": "d12aa103-9e7d-4f7d-ab84-c0525c50f53d-attachment.attach"}, {"name": "Actual Results", "source": "dfec2c02-4600-47c5-8605-779d0e69683c-attachment.attach"}], "start": 1706677945767, "stop": 1706677945767}], "start": 1706677945767, "stop": 1706677945768, "uuid": "fcf66127-353f-44fb-9644-084127e6b7e0", "historyId": "62dddce78a349c43320d10e584e06908", "testCaseId": "62dddce78a349c43320d10e584e06908", "fullName": "Test_API_Suite.test_emia#test_emia_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_emia"}, {"name": "host", "value": "fv-az1496-301"}, {"name": "thread", "value": "1928-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_emia"}]}