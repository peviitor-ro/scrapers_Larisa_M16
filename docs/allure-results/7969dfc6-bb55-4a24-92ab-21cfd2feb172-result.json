{"name": "Test job cities from the emia website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job cities for the following job titles: ['Technical Email Delivery Specialist', 'Junior System Administrator', 'Junior Procurement Executive']", "trace": "get_job_details = ((['Infrastructure Engineer', 'Technical Email Delivery Specialist', 'Junior System Administrator', 'Junior Procuremen...gineer'], [['Bucuresti']], ['Romania'], ['https://bengenro.bamboohr.com/jobs/view.php?id=105'], ['Emia'], ['on-site']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_emia_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities and titles from the scraper\"):\n            job_cities_scraper = scraped_jobs_data[1]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job cities and titles from the Peviitor API\"):\n            job_cities_peviitor = peviitor_jobs_data[1]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Scraper Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Peviitor Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_emia.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f9dac6e7ac0>\nexpected_cities = [['Bucuresti'], ['Bucuresti'], ['Bucuresti'], ['Bucuresti']]\nactual_cities = [['Bucuresti']]\njob_titles_scraper = ['Infrastructure Engineer', 'Technical Email Delivery Specialist', 'Junior System Administrator', 'Junior Procurement Executive']\napi_job_titles = ['Infrastructure Engineer']\n\n    def check_job_cities(self, expected_cities, actual_cities, job_titles_scraper, api_job_titles):\n        if not expected_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occurred\"\n    \n        # Check jobs from scraper against the peviitor api\n        scraper_actual_cities, scraper_job_titles = self.get_different_items(expected_cities, actual_cities, job_titles_scraper)\n    \n        if scraper_actual_cities:\n            msg = f\"Peviitor is missing job cities for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Peviitor is missing job cities for the following job titles: ['Technical Email Delivery Specialist', 'Junior System Administrator', 'Junior Procurement Executive']\n\ntests/utils.py:185: AssertionError"}, "steps": [{"name": "Step 1: Get job cities and titles from the scraper", "status": "passed", "start": 1712726207733, "stop": 1712726207733}, {"name": "Step 2: Get job cities and titles from the Peviitor API", "status": "passed", "start": 1712726207733, "stop": 1712726207733}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job cities for the following job titles: ['Technical Email Delivery Specialist', 'Junior System Administrator', 'Junior Procurement Executive']\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_emia.py\", line 84, in test_emia_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 185, in check_job_cities\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "e269a4af-64e2-4b84-9cf1-b672a7377b16-attachment.attach"}, {"name": "Actual Results", "source": "74c4b6f6-77a9-41a2-a9fe-820c20bbe3c2-attachment.attach"}], "start": 1712726207733, "stop": 1712726207733}], "start": 1712726207733, "stop": 1712726207733, "uuid": "819f60fa-600b-40c2-9d7e-39f09b2fc389", "historyId": "62dddce78a349c43320d10e584e06908", "testCaseId": "62dddce78a349c43320d10e584e06908", "fullName": "Test_API_Suite.test_emia#test_emia_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_emia"}, {"name": "host", "value": "fv-az524-504"}, {"name": "thread", "value": "2315-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_emia"}]}