{"name": "Test job cities from the accenture website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: An unknown error occurred", "trace": "get_job_details = ((['Executive Assistant with German', 'Recruiter with Italian', 'Strategic Sourcer with Italian', 'SAP Basis Platform ...ture', 'Accenture', 'Accenture', 'Accenture', ...], ['remote', 'remote', 'remote', 'remote', 'remote', 'remote', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_accenture_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities and titles from the scraper\"):\n            job_cities_scraper = scraped_jobs_data[1]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job cities and titles from the Peviitor API\"):\n            job_cities_peviitor = peviitor_jobs_data[1]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Scraper Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Peviitor Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           testutils.check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_accenture.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f651433a2c0>\nexpected_cities = [[], [], ['Brasov', 'Bucuresti', 'Cluj-Napoca', 'Iasi', 'Timisoara'], ['Bucuresti'], ['Bucuresti'], ['Bucuresti'], ...]\nactual_cities = [[], [], ['Brasov', 'Bucuresti', 'Cluj-Napoca', 'Iasi', 'Targu-Mures', 'Timisoara'], ['Bucuresti'], ['Bucuresti'], ['Bucuresti'], ...]\njob_titles_scraper = ['Applicant Sourcer with French', 'Back Office Representative with French', 'Contract Manager GLN Contracting', 'Execu...l Controllership Specialist with English (Remote)', 'Legal Contract Analyst/Senior Analyst with Italian (Remote)', ...]\napi_job_titles = ['Back Office Representative with French', 'Collections Officer with Czech/ Slovak', 'Contract Manager GLN Contracting...ollership Specialist with English (Remote)', 'Oracle Database Administrator', 'SAP Basis IAM Analyst with German', ...]\n\n    def check_job_cities(self, expected_cities, actual_cities, job_titles_scraper, api_job_titles):\n        expected_cities, actual_cities, job_titles_scraper, api_job_titles = sorted(expected_cities), sorted(actual_cities), sorted(job_titles_scraper), sorted(api_job_titles)\n        if not expected_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occurred\"\n    \n        # Check jobs from scraper against the peviitor api\n        scraper_actual_cities, scraper_job_titles = self.get_different_items(expected_cities, actual_cities, job_titles_scraper)\n    \n        if scraper_actual_cities:\n            msg = f\"Peviitor is missing job cities for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n            raise AssertionError(msg)\n        else:\n            # Check jobs from peviitor against the scraper response\n            peviitor_actual_cities, peviitor_job_titles = self.get_different_items(actual_cities, expected_cities, api_job_titles)\n            if peviitor_actual_cities:\n                msg = f\"Peviitor is having extra job cities for the following job titles: {peviitor_job_titles}\"\n                allure.step(msg)\n                raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_cities == actual_cities, msg\nE       AssertionError: An unknown error occurred\n\ntests/utils.py:216: AssertionError"}, "steps": [{"name": "Step 1: Get job cities and titles from the scraper", "status": "passed", "start": 1714540519532, "stop": 1714540519532}, {"name": "Step 2: Get job cities and titles from the Peviitor API", "status": "passed", "start": 1714540519532, "stop": 1714540519532}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: An unknown error occurred\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_accenture.py\", line 87, in test_accenture_city_api\n    testutils.check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 216, in check_job_cities\n    assert expected_cities == actual_cities, msg\n"}, "attachments": [{"name": "Expected Results", "source": "93d9ea5f-89ca-4776-9150-a41124e98106-attachment.attach"}, {"name": "Actual Results", "source": "8100156a-215d-4873-a164-0ac57149b292-attachment.attach"}], "start": 1714540519532, "stop": 1714540519532}], "start": 1714540519532, "stop": 1714540519532, "uuid": "3c922235-28fe-49af-a716-c3062d417aa5", "historyId": "62e214e8351885ccc6844039e9e900bf", "testCaseId": "62e214e8351885ccc6844039e9e900bf", "fullName": "Test_API_Suite.test_accenture#test_accenture_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_accenture"}, {"name": "host", "value": "fv-az1018-730"}, {"name": "thread", "value": "2017-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_accenture"}]}