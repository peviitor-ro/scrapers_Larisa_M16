{"name": "Test job titles from the cgsromania website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: [' Back Office Representative - French (remote)', ' Client Advisor with English - Sibiu', 'Advisor with English - Constanta', 'Client Advisor with English & French - Brasov', 'Client Advisor with English (Remote)', 'Client Advisor with English - Brasov', 'Client Advisor with English - Galati', 'Client Advisor with French (Remote)', 'Client Advisor with German (Remote)', 'Client Advisor with Italian - Bucharest', 'Consultant - Sibiu', 'Consultant - Targu Jiu', 'Consultant Clienti - Remote', 'Consultant Relatii Clienti – Brasov', 'HELPDESK Munkatárs, Home Office lehetőséggel!', 'Magyar nyelven beszélő ügyfélszolgálati munkatárs', 'Product Consultant - Bucharest', 'Specialist Vanzari - Galati']", "trace": "get_job_details = ((['Product Consultant - Bucharest', 'Client Advisor with English - Galati', 'Advisor with English - Constanta', 'Cons...nia.cgsinc.com/joburi/12626/', 'https://romania.cgsinc.com/joburi/consultant-clienti-remote/', ...]), ([], [], [], []))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_cgsromania_title_api(get_job_details):\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(peviitor_jobs_data[0])\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_titles_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_titles_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_cgsromania.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f3beb3b5630>\nexpected_titles = [' Back Office Representative - French (remote)', ' Client Advisor with English - Sibiu', 'Advisor with English - Cons...r with English & French - Brasov', 'Client Advisor with English (Remote)', 'Client Advisor with English - Brasov', ...]\nactual_titles = []\n\n    def check_job_titles(self, expected_titles, actual_titles):\n        missing_titles = self.get_missing_items(expected_titles, actual_titles)\n    \n        if missing_titles:\n            msg = f\"Peviitor is having extra job titles: {missing_titles}\"\n        else:\n            missing_titles = self.get_missing_items(actual_titles, expected_titles)\n            msg = f\"Peviitor is missing job titles: {missing_titles}\"\n    \n        if not expected_titles and not actual_titles:\n            msg = f\"Scraper is not grabbing any job titles\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_titles == actual_titles, msg\nE       AssertionError: Peviitor is having extra job titles: [' Back Office Representative - French (remote)', ' Client Advisor with English - Sibiu', 'Advisor with English - Constanta', 'Client Advisor with English & French - Brasov', 'Client Advisor with English (Remote)', 'Client Advisor with English - Brasov', 'Client Advisor with English - Galati', 'Client Advisor with French (Remote)', 'Client Advisor with German (Remote)', 'Client Advisor with Italian - Bucharest', 'Consultant - Sibiu', 'Consultant - Targu Jiu', 'Consultant Clienti - Remote', 'Consultant Relatii Clienti – Brasov', 'HELPDESK Munkatárs, Home Office lehetőséggel!', 'Magyar nyelven beszélő ügyfélszolgálati munkatárs', 'Product Consultant - Bucharest', 'Specialist Vanzari - Galati']\n\ntests/utils.py:96: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1705641163162, "stop": 1705641163162}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1705641163162, "stop": 1705641163162}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: [' Back Office Representative - French (remote)', ' Client Advisor with English - Sibiu', 'Advisor with English - Constanta', 'Client Advisor with English & French - Brasov', 'Client Advisor with English (Remote)', 'Client Advisor with English - Brasov', 'Client Advisor with English - Galati', 'Client Advisor with French (Remote)', 'Client Advisor with German (Remote)', 'Client Advisor with Italian - Bucharest', 'Consultant - Sibiu', 'Consultant - Targu Jiu', 'Consultant Clienti - Remote', 'Consultant Relatii Clienti – Brasov', 'HELPDESK Munkatárs, Home Office lehetőséggel!', 'Magyar nyelven beszélő ügyfélszolgálati munkatárs', 'Product Consultant - Bucharest', 'Specialist Vanzari - Galati']\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_cgsromania.py\", line 36, in test_cgsromania_title_api\n    TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 96, in check_job_titles\n    assert expected_titles == actual_titles, msg\n"}, "attachments": [{"name": "Expected Results", "source": "64909a22-4d8f-4d4f-9d30-7e87007b647e-attachment.attach"}, {"name": "Actual Results", "source": "fcc48070-8608-4252-a95d-4772643fda15-attachment.attach"}], "start": 1705641163162, "stop": 1705641163162}], "attachments": [{"name": "stdout", "source": "a7abb7b1-e188-46ff-abe2-7ffe185dbc40-attachment.txt", "type": "text/plain"}], "start": 1705641163161, "stop": 1705641163162, "uuid": "799f54dd-7eb3-4ece-85ad-e0ca53ad7042", "historyId": "cade842bcd5018bdeb87640f00f273e1", "testCaseId": "cade842bcd5018bdeb87640f00f273e1", "fullName": "Test_API_Suite.test_cgsromania#test_cgsromania_title_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_cgsromania"}, {"name": "host", "value": "fv-az660-903"}, {"name": "thread", "value": "1941-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_cgsromania"}]}