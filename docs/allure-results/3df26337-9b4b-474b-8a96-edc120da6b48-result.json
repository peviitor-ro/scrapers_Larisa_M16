{"name": "Test job countries from the emia website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job countries for the following job titles: ['Technical Email Delivery Specialist', 'Junior System Administrator', 'Junior Procurement Executive']", "trace": "get_job_details = ((['Infrastructure Engineer', 'Technical Email Delivery Specialist', 'Junior System Administrator', 'Junior Procuremen...gineer'], [['Bucuresti']], ['Romania'], ['https://bengenro.bamboohr.com/jobs/view.php?id=105'], ['Emia'], ['on-site']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_emia_country_api(get_job_details):\n        allure.dynamic.title(f\"Test job countries from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job countries and titles from the scraper\"):\n            job_countries_scraper = scraped_jobs_data[2]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job countries and titles from the Peviitor API\"):\n            job_countries_peviitor = peviitor_jobs_data[2]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job countries from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Scraper Expected Results: {job_countries_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Peviitor Actual Results: {job_countries_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_emia.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f9dac68e5c0>\nexpected_countries = ['Romania', 'Romania', 'Romania', 'Romania']\nactual_countries = ['Romania']\njob_titles_scraper = ['Infrastructure Engineer', 'Technical Email Delivery Specialist', 'Junior System Administrator', 'Junior Procurement Executive']\napi_job_titles = ['Infrastructure Engineer']\n\n    def check_job_countries(self, expected_countries, actual_countries, job_titles_scraper, api_job_titles):\n        if not expected_countries:\n            msg = f\"Scraper is not grabbing any job countries\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occured\"\n    \n        # Check job countries from scraper against the peviitor api\n        scraper_actual_countries, scraper_job_titles = self.get_different_items(expected_countries, actual_countries, job_titles_scraper)\n    \n        if scraper_actual_countries:\n            msg = f\"Peviitor is missing job countries for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Peviitor is missing job countries for the following job titles: ['Technical Email Delivery Specialist', 'Junior System Administrator', 'Junior Procurement Executive']\n\ntests/utils.py:212: AssertionError"}, "steps": [{"name": "Step 1: Get job countries and titles from the scraper", "status": "passed", "start": 1712726207744, "stop": 1712726207744}, {"name": "Step 2: Get job countries and titles from the Peviitor API", "status": "passed", "start": 1712726207744, "stop": 1712726207744}, {"name": "Step 3: Compare job countries from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job countries for the following job titles: ['Technical Email Delivery Specialist', 'Junior System Administrator', 'Junior Procurement Executive']\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_emia.py\", line 104, in test_emia_country_api\n    TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 212, in check_job_countries\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "12c3f262-75f7-45a7-85fd-f390c0949455-attachment.attach"}, {"name": "Actual Results", "source": "7ee749ea-3755-4311-b28b-cfaad96252d9-attachment.attach"}], "start": 1712726207744, "stop": 1712726207744}], "start": 1712726207744, "stop": 1712726207744, "uuid": "a1e965ec-a7a8-4457-b27f-6c4277787e0b", "historyId": "221abec819d86f35a963fa38cac76b41", "testCaseId": "221abec819d86f35a963fa38cac76b41", "fullName": "Test_API_Suite.test_emia#test_emia_country_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_emia"}, {"name": "host", "value": "fv-az524-504"}, {"name": "thread", "value": "2315-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_emia"}]}