{"name": "Test if job titles from the jumbo website contains special characters", "status": "failed", "statusDetails": {"message": "AssertionError: Scraper is not grabbing any job titles", "trace": "get_job_details = (([], [], [], [], []), ([], [], [], [], [], []))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_jumbo_special_title_api(get_job_details):\n        allure.dynamic.title(f\"Test if job titles from the {company_name} website contains special characters\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Compare job titles from scraper response against the non special character variant\"):\n            allure.attach(f\"Scraper Actual Results: {job_titles_scraper}\", name=\"Expected Results\")\n>           TestUtils().check_special_job_titles(job_titles_scraper)\n\ntests/Test_API_Suite/test_jumbo.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fcd58c90bb0>, expected_titles = []\n\n    def check_special_job_titles(self, expected_titles):\n        # return if any job title contains special characters\n        special_job_titles = [self.check_special_characters(job_title) for job_title in expected_titles if self.check_special_characters(job_title) != False]\n    \n        msg = \"Unknown error occured\"\n    \n        if special_job_titles:\n            msg = f\"Peviitor is having job titles with special characters: {special_job_titles}\"\n    \n        if not expected_titles and not special_job_titles:\n            msg = f\"Scraper is not grabbing any job titles\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Scraper is not grabbing any job titles\n\ntests/utils.py:161: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1712726335364, "stop": 1712726335364}, {"name": "Step 2: Compare job titles from scraper response against the non special character variant", "status": "failed", "statusDetails": {"message": "AssertionError: Scraper is not grabbing any job titles\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_jumbo.py\", line 66, in test_jumbo_special_title_api\n    TestUtils().check_special_job_titles(job_titles_scraper)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 161, in check_special_job_titles\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "1310adbe-63f4-48c7-8ba3-a8a71abd5f5a-attachment.attach"}], "start": 1712726335364, "stop": 1712726335364}], "start": 1712726335364, "stop": 1712726335364, "uuid": "4a3c77d3-4c4a-4d2d-bdd3-1c050fd920fd", "historyId": "16261ce339262368bde207f692f0015d", "testCaseId": "16261ce339262368bde207f692f0015d", "fullName": "Test_API_Suite.test_jumbo#test_jumbo_special_title_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_jumbo"}, {"name": "host", "value": "fv-az524-504"}, {"name": "thread", "value": "2318-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_jumbo"}]}