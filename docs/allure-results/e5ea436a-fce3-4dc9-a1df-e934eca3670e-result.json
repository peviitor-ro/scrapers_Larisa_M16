{"name": "Test job types from the autototal website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: An unknown error occured", "trace": "get_job_details = ((['Sofer (distributie) – Tunari', 'Lucrator comercial in depozit (picker) – Bucuresti (IMGB)', 'Lucrator comercial in...te/', ...], ['AUTOTOTAL', 'AUTOTOTAL', 'AUTOTOTAL', 'AUTOTOTAL', 'AUTOTOTAL', 'AUTOTOTAL', ...], ['onsite', 'onsite']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_autototal_type_api(get_job_details):\n        allure.dynamic.title(f\"Test job types from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job types from the scraper\"):\n            job_types_scraper = scraped_jobs_data[4]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job types from the Peviitor API\"):\n            job_types_peviitor = peviitor_jobs_data[5]\n    \n        with allure.step(\"Step 3: Compare job types from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_types_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_types_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_types(job_types_scraper, job_types_peviitor, job_titles_scraper)\n\ntests/Test_API_Suite/test_autototal.py:107: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fe825e7ece0>\nexpected_types = ['onsite', 'onsite', 'onsite', 'onsite']\nactual_types = ['onsite', 'onsite']\njob_titles_scraper = ['Sofer (distributie) – Tunari', 'Lucrator comercial in depozit (picker) – Bucuresti (IMGB)', 'Lucrator comercial in d... de sofer – Lugoj', 'FOCHIST (Bucuresti – IMGB)', 'Stivuitorist – depozit IMGB', 'Consilier Tehnic – Call Center', ...]\n\n    def check_job_types(self, expected_types, actual_types, job_titles_scraper):\n        if not expected_types and not actual_types:\n            msg = f\"Scraper is not grabbing any job types\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        # Setting dummy job titles for popping to not influence other tests\n        dummy_job_titles = job_titles_scraper[:]\n        missing_types = self.get_different_items(expected_types, actual_types, dummy_job_titles)\n        msg = \"An unknown error occured\"\n    \n        if missing_types:\n            msg = f\"Peviitor is having extra job types for the following titles: {missing_types[1]}\"\n        else:\n            missing_types = self.get_different_items(actual_types, expected_types, dummy_job_titles)\n            if missing_types:\n                msg = f\"Peviitor is missing job types: {missing_types[1]}\"\n    \n        allure.step(msg)\n>       assert expected_types == actual_types, msg\nE       AssertionError: An unknown error occured\n\ntests/utils.py:189: AssertionError"}, "steps": [{"name": "Step 1: Get job types from the scraper", "status": "passed", "start": 1706764328985, "stop": 1706764328985}, {"name": "Step 2: Get job types from the Peviitor API", "status": "passed", "start": 1706764328985, "stop": 1706764328985}, {"name": "Step 3: Compare job types from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: An unknown error occured\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_autototal.py\", line 107, in test_autototal_type_api\n    TestUtils().check_job_types(job_types_scraper, job_types_peviitor, job_titles_scraper)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 189, in check_job_types\n    assert expected_types == actual_types, msg\n"}, "attachments": [{"name": "Expected Results", "source": "9fb74107-7092-4796-ba58-4614b84028a8-attachment.attach"}, {"name": "Actual Results", "source": "108cfc15-4421-4b12-9051-c757528f40e6-attachment.attach"}], "start": 1706764328985, "stop": 1706764328985}], "start": 1706764328985, "stop": 1706764328986, "uuid": "2bf73db4-0747-4d16-82b3-f5ceeff4c67d", "historyId": "57640d37b24596cc6d3bdf98571dae95", "testCaseId": "57640d37b24596cc6d3bdf98571dae95", "fullName": "Test_API_Suite.test_autototal#test_autototal_type_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_autototal"}, {"name": "host", "value": "fv-az1566-267"}, {"name": "thread", "value": "1907-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_autototal"}]}