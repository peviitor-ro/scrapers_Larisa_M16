{"name": "Test http code response on job links for elektrobit website", "status": "failed", "statusDetails": {"message": "AssertionError: Scraper is not grabbing any job links", "trace": "get_job_details = (([], [], [], []), ([], [], [], []))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_elektrobit_status_code_link_api(get_job_details):\n        allure.dynamic.title(f\"Test http code response on job links for {company_name} website\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job links from the scraper\"):\n            job_links_scraper = sorted(scraped_jobs_data[3])\n    \n        with allure.step(\"Step 2: Check job links for response code\"):\n            status_codes_expected_result = [200] * len(job_links_scraper)\n            status_codes_actual_result = [requests.get(link).status_code for link in job_links_scraper]\n            allure.attach(f\"Expected Results: {status_codes_expected_result}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {status_codes_actual_result}\", name=\"Actual Results\")\n>           TestUtils().check_code_job_links(status_codes_expected_result, status_codes_actual_result)\n\ntests/Test_API_Suite/test_elektrobit.py:117: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f55e8aa82b0>\nstatus_codes_expected_result = [], status_codes_actual_result = []\n\n    def check_code_job_links(self, status_codes_expected_result, status_codes_actual_result):\n        http_codes = self.get_missing_items(status_codes_expected_result, status_codes_actual_result)\n        msg = \"\"\n    \n        if not http_codes:\n            msg = f\"Some job links from scraper do not return 200 http status code: {http_codes}\"\n            allure.step(msg)\n    \n        if not status_codes_expected_result and not status_codes_actual_result:\n            msg = f\"Scraper is not grabbing any job links\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Scraper is not grabbing any job links\n\ntests/utils.py:180: AssertionError"}, "steps": [{"name": "Step 1: Get job links from the scraper", "status": "passed", "start": 1705900406541, "stop": 1705900406541}, {"name": "Step 2: Check job links for response code", "status": "failed", "statusDetails": {"message": "AssertionError: Scraper is not grabbing any job links\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_elektrobit.py\", line 117, in test_elektrobit_status_code_link_api\n    TestUtils().check_code_job_links(status_codes_expected_result, status_codes_actual_result)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 180, in check_code_job_links\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "162e9e61-2645-40c2-a06d-90b49adf01f9-attachment.attach"}, {"name": "Actual Results", "source": "e984a8d2-3ca8-4d66-8d4d-dab8b2e52528-attachment.attach"}], "start": 1705900406541, "stop": 1705900406541}], "start": 1705900406541, "stop": 1705900406542, "uuid": "4ff2dee1-e18f-49c0-83cf-15a309be17f3", "historyId": "8a27daca8fe75a47e918d34c31f495a9", "testCaseId": "8a27daca8fe75a47e918d34c31f495a9", "fullName": "Test_API_Suite.test_elektrobit#test_elektrobit_status_code_link_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_elektrobit"}, {"name": "host", "value": "fv-az696-482"}, {"name": "thread", "value": "1939-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_elektrobit"}]}