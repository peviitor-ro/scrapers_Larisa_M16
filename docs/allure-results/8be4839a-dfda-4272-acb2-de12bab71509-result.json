{"name": "Test job cities from the agilefreaks website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: An unknown error occured", "trace": "get_job_details = ((['Drupal Developer', 'DevOps Engineer Intern', 'Backend Developer'], [['Backend Team']], ['Romania', 'Romania', 'Rom...al-developer', 'https://careers.agilefreaks.com/jobs/1956042-devops-engineer-intern'], ['AgileFreaks', 'AgileFreaks']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_agilefreaks_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities from the scraper\"):\n            job_cities_scraper = scraped_jobs_data[1]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job cities from the Peviitor API\"):\n            job_cities_peviitor = peviitor_jobs_data[1]\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper)\n\ntests/Test_API_Suite/test_agilefreaks.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fbfc47811b0>\nexpected_cities = [['Backend Team']], actual_cities = []\njob_titles_scraper = ['Drupal Developer', 'DevOps Engineer Intern', 'Backend Developer']\n\n    def check_job_cities(self, expected_cities, actual_cities, job_titles_scraper):\n        if not expected_cities and not actual_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        # Setting dummy job titles for popping to not influence other tests\n        dummy_job_titles = job_titles_scraper[:]\n        missing_cities = self.get_different_items(expected_cities, actual_cities, dummy_job_titles)\n        msg = \"An unknown error occured\"\n    \n        if missing_cities:\n            msg = f\"Peviitor is having extra job cities for the following titles: {missing_cities[1]}\"\n        else:\n            missing_cities = self.get_different_items(actual_cities, expected_cities, dummy_job_titles)\n            if missing_cities:\n                msg = f\"Peviitor is missing job cities: {missing_cities[1]}\"\n    \n        allure.step(msg)\n>       assert expected_cities == actual_cities, msg\nE       AssertionError: An unknown error occured\n\ntests/utils.py:143: AssertionError"}, "steps": [{"name": "Step 1: Get job cities from the scraper", "status": "passed", "start": 1706645540199, "stop": 1706645540199}, {"name": "Step 2: Get job cities from the Peviitor API", "status": "passed", "start": 1706645540199, "stop": 1706645540199}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: An unknown error occured\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_agilefreaks.py\", line 71, in test_agilefreaks_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 143, in check_job_cities\n    assert expected_cities == actual_cities, msg\n"}, "attachments": [{"name": "Expected Results", "source": "b656b32e-b769-41fc-80ea-3f17aed9fae6-attachment.attach"}, {"name": "Actual Results", "source": "ecb5c1cd-86eb-4c9a-b7a8-4fe4ff73cead-attachment.attach"}], "start": 1706645540199, "stop": 1706645540199}], "start": 1706645540199, "stop": 1706645540199, "uuid": "69d43cbb-33f7-402a-ad9b-ad63bf2ef6ae", "historyId": "f30d30f02e8298a35e719cb860686b76", "testCaseId": "f30d30f02e8298a35e719cb860686b76", "fullName": "Test_API_Suite.test_agilefreaks#test_agilefreaks_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_agilefreaks"}, {"name": "host", "value": "fv-az1531-360"}, {"name": "thread", "value": "1943-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_agilefreaks"}]}