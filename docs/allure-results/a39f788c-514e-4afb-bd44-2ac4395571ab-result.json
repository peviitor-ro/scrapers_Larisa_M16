{"name": "Test job types from the emia website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job types for the following jobs: [' Strategic Partnerships Director', 'Junior System Administrator', 'Technology Sales Manager', 'Junior Procurement Executive']", "trace": "get_job_details = ((['Infrastructure Engineer', ' Strategic Partnerships Director', 'Junior System Administrator', 'Technology Sales Man...gineer'], [['Bucuresti']], ['Romania'], ['https://bengenro.bamboohr.com/jobs/view.php?id=105'], ['Emia'], ['on-site']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_emia_type_api(get_job_details):\n        allure.dynamic.title(f\"Test job types from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job types and titles from the scraper\"):\n            job_types_scraper = scraped_jobs_data[4]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job types and titles from the Peviitor API\"):\n            job_types_peviitor = peviitor_jobs_data[5]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job types from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Scraper Expected Results: {job_types_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Peviitor Actual Results: {job_types_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_types(job_types_scraper, job_types_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_emia.py:110: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fce4bc4d3c0>\nexpected_types = ['on-site', 'on-site', 'on-site', 'on-site', 'on-site']\nactual_types = ['on-site']\njob_titles_scraper = ['Infrastructure Engineer', ' Strategic Partnerships Director', 'Junior System Administrator', 'Technology Sales Manager', 'Junior Procurement Executive']\napi_job_titles = ['Infrastructure Engineer']\n\n    def check_job_types(self, expected_types, actual_types, job_titles_scraper, api_job_titles):\n        if not expected_types:\n            msg = f\"Scraper is not grabbing any job types\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occured\"\n    \n        # Check job types from scraper against the peviitor api\n        scraper_actual_types, scraper_job_titles = self.get_different_items(expected_types, actual_types, job_titles_scraper)\n    \n        if scraper_actual_types:\n            msg = f\"Peviitor is missing job types for the following jobs: {scraper_job_titles}\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Peviitor is missing job types for the following jobs: [' Strategic Partnerships Director', 'Junior System Administrator', 'Technology Sales Manager', 'Junior Procurement Executive']\n\ntests/utils.py:195: AssertionError"}, "steps": [{"name": "Step 1: Get job types and titles from the scraper", "status": "passed", "start": 1710912011162, "stop": 1710912011162}, {"name": "Step 2: Get job types and titles from the Peviitor API", "status": "passed", "start": 1710912011162, "stop": 1710912011162}, {"name": "Step 3: Compare job types from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job types for the following jobs: [' Strategic Partnerships Director', 'Junior System Administrator', 'Technology Sales Manager', 'Junior Procurement Executive']\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_emia.py\", line 110, in test_emia_type_api\n    TestUtils().check_job_types(job_types_scraper, job_types_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 195, in check_job_types\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "49ee2212-a47a-4054-b232-80ea80e53f69-attachment.attach"}, {"name": "Actual Results", "source": "64bede81-2c70-4e90-9b9d-ecb725cd9123-attachment.attach"}], "start": 1710912011162, "stop": 1710912011162}], "start": 1710912011162, "stop": 1710912011163, "uuid": "91951e03-9ed9-465e-a5d2-aaf09eb8572a", "historyId": "167dd6bf7e5dfe99d82304183c3bb8e4", "testCaseId": "167dd6bf7e5dfe99d82304183c3bb8e4", "fullName": "Test_API_Suite.test_emia#test_emia_type_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_emia"}, {"name": "host", "value": "fv-az1458-111"}, {"name": "thread", "value": "2328-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_emia"}]}