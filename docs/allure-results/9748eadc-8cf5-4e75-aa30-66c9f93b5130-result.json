{"name": "Test job titles from the accenture website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Contract Manager GLN Contracting', 'Executive Assistant with Italian', 'HR Partner Senior Analyst with French', 'SAP Basis IAM Analyst with German', 'Senior MS Dynamics 365 CE Developer', 'ServiceNow BMC Helix Developer']", "trace": "get_job_details = ((['Executive Assistant with Italian', 'SAP PP/QM/PM Consultant (all genders)', 'Content Reviewer with Russian', 'Seni...ture', 'Accenture', 'Accenture', 'Accenture', ...], ['remote', 'remote', 'remote', 'remote', 'remote', 'remote', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_accenture_title_api(get_job_details):\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(peviitor_jobs_data[0])\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Scraper Expected Results: {job_titles_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Peviitor Actual Results: {job_titles_peviitor}\", name=\"Actual Results\")\n>           testutils.check_job_titles(job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_accenture.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f0855952c50>\nexpected_titles = ['App Cloud Tech Support Associate with Spanish', 'Content Reviewer with Russian', 'Contract Manager GLN Contracting',...tive Assistant with Italian', 'HR Partner Senior Analyst with Bulgarian', 'HR Partner Senior Analyst with French', ...]\nactual_titles = ['App Cloud Tech Support Associate with Spanish', 'Back Office Representative with French', 'Content Reviewer with Greek', 'Content Reviewer with Russian', 'Contract Management Officer with French', 'HR Generalist with French', ...]\n\n    def check_job_titles(self, expected_titles, actual_titles):\n        missing_titles = self.get_missing_items(expected_titles, actual_titles)\n    \n        if missing_titles:\n            msg = f\"Peviitor is having extra job titles: {missing_titles}\"\n        else:\n            missing_titles = self.get_missing_items(actual_titles, expected_titles)\n            msg = f\"Peviitor is missing job titles: {missing_titles}\"\n    \n        if not expected_titles and not actual_titles:\n            msg = f\"Scraper is not grabbing any job titles\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_titles == actual_titles, msg\nE       AssertionError: Peviitor is having extra job titles: ['Contract Manager GLN Contracting', 'Executive Assistant with Italian', 'HR Partner Senior Analyst with French', 'SAP Basis IAM Analyst with German', 'Senior MS Dynamics 365 CE Developer', 'ServiceNow BMC Helix Developer']\n\ntests/utils.py:162: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1715577458689, "stop": 1715577458689}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1715577458689, "stop": 1715577458689}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Contract Manager GLN Contracting', 'Executive Assistant with Italian', 'HR Partner Senior Analyst with French', 'SAP Basis IAM Analyst with German', 'Senior MS Dynamics 365 CE Developer', 'ServiceNow BMC Helix Developer']\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_accenture.py\", line 55, in test_accenture_title_api\n    testutils.check_job_titles(job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 162, in check_job_titles\n    assert expected_titles == actual_titles, msg\n"}, "attachments": [{"name": "Expected Results", "source": "ac06ef30-4bbf-41f4-bee4-9d3c0876d446-attachment.attach"}, {"name": "Actual Results", "source": "bb1627af-15ae-410f-a057-f27870d41d6e-attachment.attach"}], "start": 1715577458690, "stop": 1715577458690}], "start": 1715577458689, "stop": 1715577458690, "uuid": "cdb0339b-1119-4fb7-9700-198955c258f2", "historyId": "aa9d4fb22e32ec07e54a1ecca4d687ab", "testCaseId": "aa9d4fb22e32ec07e54a1ecca4d687ab", "fullName": "Test_API_Suite.test_accenture#test_accenture_title_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_accenture"}, {"name": "host", "value": "fv-az1533-130"}, {"name": "thread", "value": "2023-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_accenture"}]}