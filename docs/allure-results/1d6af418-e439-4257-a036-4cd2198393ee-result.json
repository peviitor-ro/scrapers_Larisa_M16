{"name": "Test job types from the coremaker website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Scraper is not grabbing any job types", "trace": "get_job_details = (([], [], [], [], []), ([], [], [], [], [], []))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_coremaker_type_api(get_job_details):\n        allure.dynamic.title(f\"Test job types from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job types and titles from the scraper\"):\n            job_types_scraper = scraped_jobs_data[4]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job types and titles from the Peviitor API\"):\n            job_types_peviitor = peviitor_jobs_data[5]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job types from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_types_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_types_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_types(job_types_scraper, job_types_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_coremaker.py:109: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f4417529d80>, expected_types = []\nactual_types = [], job_titles_scraper = [], api_job_titles = []\n\n    def check_job_types(self, expected_types, actual_types, job_titles_scraper, api_job_titles):\n        if not expected_types:\n            msg = f\"Scraper is not grabbing any job types\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Scraper is not grabbing any job types\n\ntests/utils.py:185: AssertionError"}, "steps": [{"name": "Step 1: Get job types and titles from the scraper", "status": "passed", "start": 1708492529001, "stop": 1708492529001}, {"name": "Step 2: Get job types and titles from the Peviitor API", "status": "passed", "start": 1708492529001, "stop": 1708492529001}, {"name": "Step 3: Compare job types from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Scraper is not grabbing any job types\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_coremaker.py\", line 109, in test_coremaker_type_api\n    TestUtils().check_job_types(job_types_scraper, job_types_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 185, in check_job_types\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "8ac2bd75-167a-4090-b394-b3b037c8bc93-attachment.attach"}, {"name": "Actual Results", "source": "442e9e20-a858-4374-bab5-8867e86e4f1f-attachment.attach"}], "start": 1708492529001, "stop": 1708492529001}], "start": 1708492529001, "stop": 1708492529001, "uuid": "2f059256-29f3-4790-9e7d-4edacedaf286", "historyId": "4d29949516aefc58e9a1a0bef5267892", "testCaseId": "4d29949516aefc58e9a1a0bef5267892", "fullName": "Test_API_Suite.test_coremaker#test_coremaker_type_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_coremaker"}, {"name": "host", "value": "fv-az1436-986"}, {"name": "thread", "value": "2270-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_coremaker"}]}