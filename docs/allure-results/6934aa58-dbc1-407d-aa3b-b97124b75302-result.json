{"name": "Test job cities from the autototal website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job cities for the following job titles: ['Sofer cu atributii de lucrator comercial (picker) – Lugoj', 'Agent Vanzari Piese Camioane']", "trace": "get_job_details = ((['Full Time Software Developer', 'Lucrator comercial in depozit (picker) – Bucuresti (IMGB)', 'Sofer cu atributii de... 'AUTOTOTAL', 'AUTOTOTAL', 'AUTOTOTAL', ...], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_autototal_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities and titles from the scraper\"):\n            job_cities_scraper = scraped_jobs_data[1]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job cities and titles from the Peviitor API\"):\n            job_cities_peviitor = peviitor_jobs_data[1]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Scraper Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Peviitor Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_autototal.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f447d0a8790>\nexpected_cities = [['Bucuresti'], ['Bucuresti'], ['Piatra', 'Neamt'], ['Ramnicu', 'Valcea'], ['Alba', 'Iulia'], ['Bucuresti', '(IMGB)'], ...]\nactual_cities = [['Bucuresti'], ['Bucuresti'], ['Piatra', 'Neamt'], ['Ramnicu', 'Valcea'], ['Alba', 'Iulia'], ['Bucuresti', '(IMGB)'], ...]\njob_titles_scraper = ['Full Time Software Developer', 'Lucrator comercial in depozit (picker) – Bucuresti (IMGB)', 'Sofer cu atributii de l..., 'Sofer (distributie)', 'Lucrator comercial in depozit (picker)-Alba Iulia', 'IT Helpdesk/Tehnician – Bucuresti', ...]\napi_job_titles = ['Full Time Software Developer', 'Lucrator comercial in depozit (picker) – Bucuresti (IMGB)', 'Sofer cu atributii de l..., 'Sofer (distributie)', 'Lucrator comercial in depozit (picker)-Alba Iulia', 'IT Helpdesk/Tehnician – Bucuresti', ...]\n\n    def check_job_cities(self, expected_cities, actual_cities, job_titles_scraper, api_job_titles):\n        if not expected_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occurred\"\n    \n        # Check jobs from scraper against the peviitor api\n        scraper_actual_cities, scraper_job_titles = self.get_different_items(expected_cities, actual_cities, job_titles_scraper)\n    \n        if scraper_actual_cities:\n            msg = f\"Peviitor is missing job cities for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n            raise AssertionError(msg)\n        else:\n            # Check jobs from peviitor against the scraper response\n            peviitor_actual_cities, peviitor_job_titles = self.get_different_items(actual_cities, expected_cities, api_job_titles)\n            if peviitor_actual_cities:\n                msg = f\"Peviitor is having extra job cities for the following job titles: {peviitor_job_titles}\"\n                allure.step(msg)\n>               raise AssertionError(msg)\nE               AssertionError: Peviitor is having extra job cities for the following job titles: ['Sofer cu atributii de lucrator comercial (picker) – Lugoj', 'Agent Vanzari Piese Camioane']\n\ntests/utils.py:192: AssertionError"}, "steps": [{"name": "Step 1: Get job cities and titles from the scraper", "status": "passed", "start": 1712726198033, "stop": 1712726198033}, {"name": "Step 2: Get job cities and titles from the Peviitor API", "status": "passed", "start": 1712726198033, "stop": 1712726198034}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job cities for the following job titles: ['Sofer cu atributii de lucrator comercial (picker) – Lugoj', 'Agent Vanzari Piese Camioane']\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_autototal.py\", line 84, in test_autototal_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 192, in check_job_cities\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "2e599850-864e-4143-8b43-c8b94965709e-attachment.attach"}, {"name": "Actual Results", "source": "5d3a2a4e-8419-4b2f-ab25-ddde9bb66ec6-attachment.attach"}], "start": 1712726198034, "stop": 1712726198034}], "start": 1712726198033, "stop": 1712726198034, "uuid": "d1821963-67e8-42a2-8940-b0ba3f872554", "historyId": "f4e98542c45db01f88ae48d08ec753f1", "testCaseId": "f4e98542c45db01f88ae48d08ec753f1", "fullName": "Test_API_Suite.test_autototal#test_autototal_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_autototal"}, {"name": "host", "value": "fv-az524-504"}, {"name": "thread", "value": "2309-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_autototal"}]}