{"name": "Test job types from the autototal website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job types for the following titles: ['Sofer cu atributii de lucrator comercial (picker) – Lugoj', 'Agent Vanzari Piese Camioane']", "trace": "get_job_details = ((['Full Time Software Developer', 'Lucrator comercial in depozit (picker) – Bucuresti (IMGB)', 'Sofer cu atributii de... 'AUTOTOTAL', 'AUTOTOTAL', 'AUTOTOTAL', ...], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_autototal_type_api(get_job_details):\n        allure.dynamic.title(f\"Test job types from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job types and titles from the scraper\"):\n            job_types_scraper = scraped_jobs_data[4]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job types and titles from the Peviitor API\"):\n            job_types_peviitor = peviitor_jobs_data[5]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job types from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Scraper Expected Results: {job_types_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Peviitor Actual Results: {job_types_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_types(job_types_scraper, job_types_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_autototal.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f447cb11690>\nexpected_types = ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]\nactual_types = ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]\njob_titles_scraper = ['Full Time Software Developer', 'Lucrator comercial in depozit (picker) – Bucuresti (IMGB)', 'Sofer cu atributii de l..., 'Sofer (distributie)', 'Lucrator comercial in depozit (picker)-Alba Iulia', 'IT Helpdesk/Tehnician – Bucuresti', ...]\napi_job_titles = ['Full Time Software Developer', 'Lucrator comercial in depozit (picker) – Bucuresti (IMGB)', 'Sofer cu atributii de l..., 'Sofer (distributie)', 'Lucrator comercial in depozit (picker)-Alba Iulia', 'IT Helpdesk/Tehnician – Bucuresti', ...]\n\n    def check_job_types(self, expected_types, actual_types, job_titles_scraper, api_job_titles):\n        if not expected_types:\n            msg = f\"Scraper is not grabbing any job types\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occured\"\n    \n        # Check job types from scraper against the peviitor api\n        scraper_actual_types, scraper_job_titles = self.get_different_items(expected_types, actual_types, job_titles_scraper)\n    \n        if scraper_actual_types:\n            msg = f\"Peviitor is missing job types for the following jobs: {scraper_job_titles}\"\n            allure.step(msg)\n            raise AssertionError(msg)\n        else:\n            # Check job types from peviitor against the scraper response\n            peviitor_actual_countries, peviitor_job_titles = self.get_different_items(actual_types, expected_types, api_job_titles)\n            if peviitor_actual_countries:\n                msg = f\"Peviitor is having extra job types for the following titles: {peviitor_job_titles}\"\n                allure.step(msg)\n>               raise AssertionError(msg)\nE               AssertionError: Peviitor is having extra job types for the following titles: ['Sofer cu atributii de lucrator comercial (picker) – Lugoj', 'Agent Vanzari Piese Camioane']\n\ntests/utils.py:246: AssertionError"}, "steps": [{"name": "Step 1: Get job types and titles from the scraper", "status": "passed", "start": 1712726198057, "stop": 1712726198057}, {"name": "Step 2: Get job types and titles from the Peviitor API", "status": "passed", "start": 1712726198057, "stop": 1712726198057}, {"name": "Step 3: Compare job types from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job types for the following titles: ['Sofer cu atributii de lucrator comercial (picker) – Lugoj', 'Agent Vanzari Piese Camioane']\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_autototal.py\", line 123, in test_autototal_type_api\n    TestUtils().check_job_types(job_types_scraper, job_types_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 246, in check_job_types\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "1dda2041-ad25-4f06-b070-5ab36cfeb58e-attachment.attach"}, {"name": "Actual Results", "source": "619b8157-659f-402c-b815-b1213e5c2ce5-attachment.attach"}], "start": 1712726198057, "stop": 1712726198057}], "start": 1712726198057, "stop": 1712726198057, "uuid": "52f6252d-bce2-4ef6-a7f7-c645b8e8061c", "historyId": "57640d37b24596cc6d3bdf98571dae95", "testCaseId": "57640d37b24596cc6d3bdf98571dae95", "fullName": "Test_API_Suite.test_autototal#test_autototal_type_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_autototal"}, {"name": "host", "value": "fv-az524-504"}, {"name": "thread", "value": "2309-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_autototal"}]}