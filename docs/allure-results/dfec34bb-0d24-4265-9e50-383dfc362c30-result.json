{"name": "Test job companies from the monefy website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: No results display the company name within the API Response", "trace": "get_job_details = (([], [], [], [], []), ([], [], [], [], [], []))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_monefy_company_api(get_job_details):\n        allure.dynamic.title(f\"Test job companies from the {company_name} website against Peviitor API Response\")\n    \n        peviitor_jobs_data = get_job_details[1]\n        with allure.step(\"Step 1: Get expected job company names\"):\n            job_companies_scraper = [company_name] * len(peviitor_jobs_data[4])\n        with allure.step(\"Step 2: Get actual job companies from the Peviitor API\"):\n            job_companies_peviitor = peviitor_jobs_data[4]\n    \n        with allure.step(\"Step 3: Compare job companies from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_companies_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_companies_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_company(job_companies_scraper, job_companies_peviitor)\n\ntests/Test_API_Suite/test_monefy.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f9dac6e63e0>\nexpected_company_name = [], actual_company_name = []\n\n    def check_job_company(self, expected_company_name: list, actual_company_name: list):\n    \n        # Lowercase all items in list to ensure proper comparison\n        expected_company_name, actual_company_name = [name.lower() for name in expected_company_name], [name.lower() for name in actual_company_name]\n    \n        # If no actual company name is in the API\n        if not actual_company_name:\n            msg = f\"No results display the company name within the API Response\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: No results display the company name within the API Response\n\ntests/utils.py:335: AssertionError"}, "steps": [{"name": "Step 1: Get expected job company names", "status": "passed", "start": 1712726212084, "stop": 1712726212084}, {"name": "Step 2: Get actual job companies from the Peviitor API", "status": "passed", "start": 1712726212084, "stop": 1712726212084}, {"name": "Step 3: Compare job companies from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: No results display the company name within the API Response\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_monefy.py\", line 185, in test_monefy_company_api\n    TestUtils().check_job_company(job_companies_scraper, job_companies_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 335, in check_job_company\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "77f007b5-22fb-4cf5-bc3c-bc9af6a3ac03-attachment.attach"}, {"name": "Actual Results", "source": "6af95707-7d8b-4fe0-9f1f-94a949186254-attachment.attach"}], "start": 1712726212084, "stop": 1712726212084}], "start": 1712726212084, "stop": 1712726212084, "uuid": "e7ea876a-8967-48e6-b218-7ea0c1bd0a3f", "historyId": "d7c2bc8458befe09839fe8c13a88c1cb", "testCaseId": "d7c2bc8458befe09839fe8c13a88c1cb", "fullName": "Test_API_Suite.test_monefy#test_monefy_company_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_monefy"}, {"name": "host", "value": "fv-az524-504"}, {"name": "thread", "value": "2315-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_monefy"}]}