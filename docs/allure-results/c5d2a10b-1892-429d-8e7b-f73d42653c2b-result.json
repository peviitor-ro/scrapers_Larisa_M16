{"name": "Test job titles from the azets website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Consultant Salarizare', 'Data Operator', 'Junior Accountant', 'Payroll Consultant', 'Team Assistant- German Speaker']", "trace": "get_job_details = ((['Team Assistant- German Speaker', 'Junior Accountant', 'Data Operator', 'Payroll Consultant', 'Consultant Salarizar...tlink/advertpage/?advertid=27790'], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site']), ([], [], [], [], [], []))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_azets_title_api(get_job_details):\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(peviitor_jobs_data[0])\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Scraper Expected Results: {job_titles_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Peviitor Actual Results: {job_titles_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_azets.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f9a8a695bd0>\nexpected_titles = ['Consultant Salarizare', 'Data Operator', 'Junior Accountant', 'Payroll Consultant', 'Team Assistant- German Speaker']\nactual_titles = []\n\n    def check_job_titles(self, expected_titles, actual_titles):\n        missing_titles = self.get_missing_items(expected_titles, actual_titles)\n    \n        if missing_titles:\n            msg = f\"Peviitor is having extra job titles: {missing_titles}\"\n        else:\n            missing_titles = self.get_missing_items(actual_titles, expected_titles)\n            msg = f\"Peviitor is missing job titles: {missing_titles}\"\n    \n        if not expected_titles and not actual_titles:\n            msg = f\"Scraper is not grabbing any job titles\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_titles == actual_titles, msg\nE       AssertionError: Peviitor is having extra job titles: ['Consultant Salarizare', 'Data Operator', 'Junior Accountant', 'Payroll Consultant', 'Team Assistant- German Speaker']\n\ntests/utils.py:124: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1712466976602, "stop": 1712466976602}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1712466976602, "stop": 1712466976602}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Consultant Salarizare', 'Data Operator', 'Junior Accountant', 'Payroll Consultant', 'Team Assistant- German Speaker']\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_azets.py\", line 52, in test_azets_title_api\n    TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 124, in check_job_titles\n    assert expected_titles == actual_titles, msg\n"}, "attachments": [{"name": "Expected Results", "source": "f8e8150c-4cc5-423a-ae2b-cd099078c4e7-attachment.attach"}, {"name": "Actual Results", "source": "92be3108-30d3-4bc9-8817-1870d2caa492-attachment.attach"}], "start": 1712466976602, "stop": 1712466976602}], "start": 1712466976602, "stop": 1712466976602, "uuid": "e8eb851e-02b5-41b7-9b1e-41f75e8e6f52", "historyId": "e5927baa6546189b36ce2461fa7d82d5", "testCaseId": "e5927baa6546189b36ce2461fa7d82d5", "fullName": "Test_API_Suite.test_azets#test_azets_title_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_azets"}, {"name": "host", "value": "fv-az1202-671"}, {"name": "thread", "value": "2060-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_azets"}]}