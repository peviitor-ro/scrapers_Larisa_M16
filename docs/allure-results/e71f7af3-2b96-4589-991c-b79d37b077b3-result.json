{"name": "Test job countries from the autototal website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job countries for the following titles: ['Sofer cu atributii de lucrator comercial (picker) – Lugoj', 'Agent Vanzari Piese Camioane']", "trace": "get_job_details = ((['Full Time Software Developer', 'Lucrator comercial in depozit (picker) – Bucuresti (IMGB)', 'Sofer cu atributii de... 'AUTOTOTAL', 'AUTOTOTAL', 'AUTOTOTAL', ...], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_autototal_country_api(get_job_details):\n        allure.dynamic.title(f\"Test job countries from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job countries and titles from the scraper\"):\n            job_countries_scraper = scraped_jobs_data[2]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job countries and titles from the Peviitor API\"):\n            job_countries_peviitor = peviitor_jobs_data[2]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job countries from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Scraper Expected Results: {job_countries_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Peviitor Actual Results: {job_countries_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_autototal.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f447d15d150>\nexpected_countries = ['Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', ...]\nactual_countries = ['Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', ...]\njob_titles_scraper = ['Full Time Software Developer', 'Lucrator comercial in depozit (picker) – Bucuresti (IMGB)', 'Sofer cu atributii de l..., 'Sofer (distributie)', 'Lucrator comercial in depozit (picker)-Alba Iulia', 'IT Helpdesk/Tehnician – Bucuresti', ...]\napi_job_titles = ['Full Time Software Developer', 'Lucrator comercial in depozit (picker) – Bucuresti (IMGB)', 'Sofer cu atributii de l..., 'Sofer (distributie)', 'Lucrator comercial in depozit (picker)-Alba Iulia', 'IT Helpdesk/Tehnician – Bucuresti', ...]\n\n    def check_job_countries(self, expected_countries, actual_countries, job_titles_scraper, api_job_titles):\n        if not expected_countries:\n            msg = f\"Scraper is not grabbing any job countries\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occured\"\n    \n        # Check job countries from scraper against the peviitor api\n        scraper_actual_countries, scraper_job_titles = self.get_different_items(expected_countries, actual_countries, job_titles_scraper)\n    \n        if scraper_actual_countries:\n            msg = f\"Peviitor is missing job countries for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n            raise AssertionError(msg)\n        else:\n            # Check job countries from peviitor against the scraper response\n            peviitor_actual_countries, peviitor_job_titles = self.get_different_items(actual_countries, expected_countries, api_job_titles)\n            if peviitor_actual_countries:\n                msg = f\"Peviitor is having extra job countries for the following titles: {peviitor_job_titles}\"\n                allure.step(msg)\n>               raise AssertionError(msg)\nE               AssertionError: Peviitor is having extra job countries for the following titles: ['Sofer cu atributii de lucrator comercial (picker) – Lugoj', 'Agent Vanzari Piese Camioane']\n\ntests/utils.py:219: AssertionError"}, "steps": [{"name": "Step 1: Get job countries and titles from the scraper", "status": "passed", "start": 1712726198045, "stop": 1712726198045}, {"name": "Step 2: Get job countries and titles from the Peviitor API", "status": "passed", "start": 1712726198045, "stop": 1712726198045}, {"name": "Step 3: Compare job countries from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job countries for the following titles: ['Sofer cu atributii de lucrator comercial (picker) – Lugoj', 'Agent Vanzari Piese Camioane']\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_autototal.py\", line 104, in test_autototal_country_api\n    TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 219, in check_job_countries\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "d968a93b-1593-4816-a846-96c28c750448-attachment.attach"}, {"name": "Actual Results", "source": "c49135b7-589b-4bda-8e14-13bc98cf7149-attachment.attach"}], "start": 1712726198045, "stop": 1712726198046}], "start": 1712726198045, "stop": 1712726198046, "uuid": "2b24330c-d39b-4039-823a-4836fbdad3c3", "historyId": "4378d453c924401e53536ccf9a542440", "testCaseId": "4378d453c924401e53536ccf9a542440", "fullName": "Test_API_Suite.test_autototal#test_autototal_country_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_autototal"}, {"name": "host", "value": "fv-az524-504"}, {"name": "thread", "value": "2309-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_autototal"}]}