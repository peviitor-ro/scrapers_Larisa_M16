{"name": "Test job countries from the coremaker website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Scraper is not grabbing any job countries", "trace": "get_job_details = (([], [], [], [], []), ([], [], [], [], [], []))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_coremaker_country_api(get_job_details):\n        allure.dynamic.title(f\"Test job countries from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job countries from the scraper\"):\n            job_countries_scraper = scraped_jobs_data[2]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job countries from the Peviitor API\"):\n            job_countries_peviitor = peviitor_jobs_data[2]\n    \n        with allure.step(\"Step 3: Compare job countries from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_countries_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_countries_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper)\n\ntests/Test_API_Suite/test_coremaker.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fd29aa14a30>, expected_countries = []\nactual_countries = [], job_titles_scraper = []\n\n    def check_job_countries(self, expected_countries, actual_countries, job_titles_scraper):\n        if not expected_countries and not actual_countries:\n            msg = f\"Scraper is not grabbing any job countries\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Scraper is not grabbing any job countries\n\ntests/utils.py:152: AssertionError"}, "steps": [{"name": "Step 1: Get job countries from the scraper", "status": "passed", "start": 1706850758566, "stop": 1706850758566}, {"name": "Step 2: Get job countries from the Peviitor API", "status": "passed", "start": 1706850758566, "stop": 1706850758566}, {"name": "Step 3: Compare job countries from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Scraper is not grabbing any job countries\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_coremaker.py\", line 88, in test_coremaker_country_api\n    TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 152, in check_job_countries\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "a74b2a08-7c4f-40f5-9d16-b0da7ce2fb23-attachment.attach"}, {"name": "Actual Results", "source": "164f35d9-b3b4-46eb-ad79-878bd9275058-attachment.attach"}], "start": 1706850758566, "stop": 1706850758566}], "start": 1706850758566, "stop": 1706850758566, "uuid": "c7dcd793-06d2-4062-ae76-92f0ee642b20", "historyId": "369e52eea88dc06ce51d8ab6e35cfe1c", "testCaseId": "369e52eea88dc06ce51d8ab6e35cfe1c", "fullName": "Test_API_Suite.test_coremaker#test_coremaker_country_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_coremaker"}, {"name": "host", "value": "fv-az572-945"}, {"name": "thread", "value": "1907-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_coremaker"}]}