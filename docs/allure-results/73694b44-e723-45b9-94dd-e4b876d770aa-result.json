{"name": "Test job cities from the catena website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job cities: [['Popesti', 'Bucuresti', 'Timisoara', 'Iasi', 'Targu Mures', 'Brasov', 'Sibiu', 'Valcea', 'Campulung', 'Reghin', 'Mangalia', 'Falticeni', 'Zarnesti', 'Vaslui', 'Suceava'], ['Popesti', 'Bucuresti', 'Timisoara', 'Iasi', 'Targu Mures', 'Brasov', 'Sibiu', 'Valcea', 'Campulung', 'Reghin', 'Mangalia', 'Falticeni', 'Zarnesti', 'Vaslui', 'Suceava'], ['Popesti', 'Bucuresti', 'Timisoara', 'Iasi', 'Targu Mures', 'Brasov', 'Sibiu', 'Valcea', 'Campulung', 'Reghin', 'Mangalia', 'Falticeni', 'Zarnesti', 'Vaslui', 'Suceava'], ['Popesti', 'Bucuresti', 'Timisoara', 'Iasi', 'Targu Mures', 'Brasov', 'Sibiu', 'Valcea', 'Campulung', 'Reghin', 'Mangalia', 'Falticeni', 'Zarnesti', 'Vaslui', 'Suceava']]", "trace": "get_job_details = ((['Asistent de farmacie debutant', 'Farmacist', 'Referent farmacolog', 'Stagiul de practica'], [['Popesti', 'Bucurest...ww.catena.ro/cariere/referent-farmacolog', 'https://www.catena.ro/cariere/stagiul-de-practica']), ([], [], [], [], []))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_catena_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities from the scraper\"):\n            job_cities_scraper = sorted(scraped_jobs_data[1])\n    \n        with allure.step(\"Step 2: Get job cities from the Peviitor API\"):\n            job_cities_peviitor = sorted(peviitor_jobs_data[1])\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor)\n\ntests/Test_API_Suite/test_catena.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fbd7a7032e0>\nexpected_cities = [['Popesti', 'Bucuresti', 'Timisoara', 'Iasi', 'Targu Mures', 'Brasov', ...], ['Popesti', 'Bucuresti', 'Timisoara', 'I...a', 'Iasi', 'Targu Mures', 'Brasov', ...], ['Popesti', 'Bucuresti', 'Timisoara', 'Iasi', 'Targu Mures', 'Brasov', ...]]\nactual_cities = []\n\n    def check_job_cities(self, expected_cities, actual_cities):\n        missing_cities = self.get_missing_items(expected_cities, actual_cities)\n    \n        if missing_cities:\n            msg = f\"Peviitor is having extra job cities: {missing_cities}\"\n        else:\n            missing_cities = self.get_missing_items(actual_cities, expected_cities)\n            msg = f\"Peviitor is missing job cities: {missing_cities}\"\n    \n        if not expected_cities and not actual_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_cities == actual_cities, msg\nE       AssertionError: Peviitor is having extra job cities: [['Popesti', 'Bucuresti', 'Timisoara', 'Iasi', 'Targu Mures', 'Brasov', 'Sibiu', 'Valcea', 'Campulung', 'Reghin', 'Mangalia', 'Falticeni', 'Zarnesti', 'Vaslui', 'Suceava'], ['Popesti', 'Bucuresti', 'Timisoara', 'Iasi', 'Targu Mures', 'Brasov', 'Sibiu', 'Valcea', 'Campulung', 'Reghin', 'Mangalia', 'Falticeni', 'Zarnesti', 'Vaslui', 'Suceava'], ['Popesti', 'Bucuresti', 'Timisoara', 'Iasi', 'Targu Mures', 'Brasov', 'Sibiu', 'Valcea', 'Campulung', 'Reghin', 'Mangalia', 'Falticeni', 'Zarnesti', 'Vaslui', 'Suceava'], ['Popesti', 'Bucuresti', 'Timisoara', 'Iasi', 'Targu Mures', 'Brasov', 'Sibiu', 'Valcea', 'Campulung', 'Reghin', 'Mangalia', 'Falticeni', 'Zarnesti', 'Vaslui', 'Suceava']]\n\ntests/utils.py:122: AssertionError"}, "steps": [{"name": "Step 1: Get job cities from the scraper", "status": "passed", "start": 1706591567769, "stop": 1706591567769}, {"name": "Step 2: Get job cities from the Peviitor API", "status": "passed", "start": 1706591567769, "stop": 1706591567769}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job cities: [['Popesti', 'Bucuresti', 'Timisoara', 'Iasi', 'Targu Mures', 'Brasov', 'Sibiu', 'Valcea', 'Campulung', 'Reghin', 'Mangalia', 'Falticeni', 'Zarnesti', 'Vaslui', 'Suceava'], ['Popesti', 'Bucuresti', 'Timisoara', 'Iasi', 'Targu Mures', 'Brasov', 'Sibiu', 'Valcea', 'Campulung', 'Reghin', 'Mangalia', 'Falticeni', 'Zarnesti', 'Vaslui', 'Suceava'], ['Popesti', 'Bucuresti', 'Timisoara', 'Iasi', 'Targu Mures', 'Brasov', 'Sibiu', 'Valcea', 'Campulung', 'Reghin', 'Mangalia', 'Falticeni', 'Zarnesti', 'Vaslui', 'Suceava'], ['Popesti', 'Bucuresti', 'Timisoara', 'Iasi', 'Targu Mures', 'Brasov', 'Sibiu', 'Valcea', 'Campulung', 'Reghin', 'Mangalia', 'Falticeni', 'Zarnesti', 'Vaslui', 'Suceava']]\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_catena.py\", line 70, in test_catena_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 122, in check_job_cities\n    assert expected_cities == actual_cities, msg\n"}, "attachments": [{"name": "Expected Results", "source": "94e6d1ee-22f1-4bdd-bec9-f0991c3ca6ff-attachment.attach"}, {"name": "Actual Results", "source": "f417b5e9-4ed9-4d0e-be72-2e06b3f90265-attachment.attach"}], "start": 1706591567769, "stop": 1706591567769}], "start": 1706591567769, "stop": 1706591567769, "uuid": "8ae7975d-a2be-49e6-a2f4-14c6f14e9ab0", "historyId": "be20baa8cdd51b9b7a94e90ef6a6adad", "testCaseId": "be20baa8cdd51b9b7a94e90ef6a6adad", "fullName": "Test_API_Suite.test_catena#test_catena_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_catena"}, {"name": "host", "value": "fv-az1115-751"}, {"name": "thread", "value": "1941-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_catena"}]}