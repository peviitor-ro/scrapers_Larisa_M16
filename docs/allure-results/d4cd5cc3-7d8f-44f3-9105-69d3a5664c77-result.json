{"name": "Test job titles from the accenture website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Applicant Sourcer with French', 'Executive Assistant with German', 'Legal Contract Analyst/Senior Analyst with Italian (Remote)', 'Recruiter with Italian', 'Strategic Sourcer with Italian']", "trace": "get_job_details = ((['Executive Assistant with German', 'Recruiter with Italian', 'Strategic Sourcer with Italian', 'SAP Basis Platform ...ture', 'Accenture', 'Accenture', 'Accenture', ...], ['remote', 'remote', 'remote', 'remote', 'remote', 'remote', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_accenture_title_api(get_job_details):\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(peviitor_jobs_data[0])\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Scraper Expected Results: {job_titles_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Peviitor Actual Results: {job_titles_peviitor}\", name=\"Actual Results\")\n>           testutils.check_job_titles(job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_accenture.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f651433a2c0>\nexpected_titles = ['Applicant Sourcer with French', 'Back Office Representative with French', 'Contract Manager GLN Contracting', 'Execu...l Controllership Specialist with English (Remote)', 'Legal Contract Analyst/Senior Analyst with Italian (Remote)', ...]\nactual_titles = ['Back Office Representative with French', 'Collections Officer with Czech/ Slovak', 'Contract Manager GLN Contracting...ollership Specialist with English (Remote)', 'Oracle Database Administrator', 'SAP Basis IAM Analyst with German', ...]\n\n    def check_job_titles(self, expected_titles, actual_titles):\n        missing_titles = self.get_missing_items(expected_titles, actual_titles)\n    \n        if missing_titles:\n            msg = f\"Peviitor is having extra job titles: {missing_titles}\"\n        else:\n            missing_titles = self.get_missing_items(actual_titles, expected_titles)\n            msg = f\"Peviitor is missing job titles: {missing_titles}\"\n    \n        if not expected_titles and not actual_titles:\n            msg = f\"Scraper is not grabbing any job titles\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_titles == actual_titles, msg\nE       AssertionError: Peviitor is having extra job titles: ['Applicant Sourcer with French', 'Executive Assistant with German', 'Legal Contract Analyst/Senior Analyst with Italian (Remote)', 'Recruiter with Italian', 'Strategic Sourcer with Italian']\n\ntests/utils.py:162: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1714540519471, "stop": 1714540519471}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1714540519471, "stop": 1714540519471}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Applicant Sourcer with French', 'Executive Assistant with German', 'Legal Contract Analyst/Senior Analyst with Italian (Remote)', 'Recruiter with Italian', 'Strategic Sourcer with Italian']\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_API_Suite/test_accenture.py\", line 55, in test_accenture_title_api\n    testutils.check_job_titles(job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/utils.py\", line 162, in check_job_titles\n    assert expected_titles == actual_titles, msg\n"}, "attachments": [{"name": "Expected Results", "source": "1c61f68f-367b-4587-84d9-935f7737ecd2-attachment.attach"}, {"name": "Actual Results", "source": "22c3ea38-6892-461a-a08e-51850f679698-attachment.attach"}], "start": 1714540519471, "stop": 1714540519471}], "start": 1714540519471, "stop": 1714540519472, "uuid": "09aee68b-903a-4fae-8dc3-36c5f7b8bc61", "historyId": "aa9d4fb22e32ec07e54a1ecca4d687ab", "testCaseId": "aa9d4fb22e32ec07e54a1ecca4d687ab", "fullName": "Test_API_Suite.test_accenture#test_accenture_title_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_accenture"}, {"name": "host", "value": "fv-az1018-730"}, {"name": "thread", "value": "2017-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_accenture"}]}