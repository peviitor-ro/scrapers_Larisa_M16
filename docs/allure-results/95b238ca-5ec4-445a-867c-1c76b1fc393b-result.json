{"name": "Test job links from the Peviitor against the company c4media website", "status": "broken", "statusDetails": {"message": "ValueError: not enough values to unpack (expected 3, got 2)", "trace": "get_job_details = ([], [], [], [], [])\nscrape_ui = (<tests.Test_Selenium_Suite.seleniumutils.TestUtils object at 0x7efd7b0bc040>, (['Administrative Assistant (full-time,...d09d6040c0255e98460e4d\", element=\"f.8C95BE7C62E83DEAB6FC3F13068B7789.d.8B08AD34387C3B1BC66859BCD854E96F.e.37\")>], ...))\n\n    @pytest.mark.regression\n    @pytest.mark.ui\n    def test_c4media_link_ui(get_job_details, scrape_ui):\n        allure.dynamic.title(f\"Test job links from the Peviitor against the company {company_name} website\")\n    \n        scraped_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job links from the scraper\"):\n            job_links_scraper = scraped_jobs_data[3]\n        with allure.step(\"Step 2: Get job links from the Peviitor\"):\n            # Grab the data from peviitor ui\n    \n            testutils, job_details = scrape_ui[0], scrape_ui[1]\n            job_titles_peviitor = job_details[0]\n            job_links_peviitor = job_details[2]\n            job_links_elements = job_details[6]\n    \n        with allure.step(f\"Step 3: Compare job links from the Peviitor against the company {company_name} website\"):\n            allure.attach(f\"Expected Results: {job_links_peviitor}\", name=\"Peviitor Expected Results\")\n            allure.attach(f\"Actual Results: {job_links_scraper}\", name=\"Scraper Actual Results\")\n>           testutils.check_peviitor_job_links(job_links_peviitor, job_links_scraper, job_titles_peviitor, job_links_elements)\n\ntests/Test_Selenium_Suite/test_c4media.py:133: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.Test_Selenium_Suite.seleniumutils.TestUtils object at 0x7efd7b0bc040>\nexpected_links = ['https://c4media.com/open-positions/administrative-assistant-(full-time,-remote,-romania)/27', 'https://c4media.com/open-positions/senior-editorial-software-community-manager-(editor-in-chief)/26']\nactual_links = []\njob_titles = ['Administrative Assistant (full-time, remote, Romania)', 'Senior Editorial Software Community Manager (Editor-in-Chief)']\nexpected_elements = [<selenium.webdriver.remote.webelement.WebElement (session=\"72244381bbd09d6040c0255e98460e4d\", element=\"f.8C95BE7C62E8...44381bbd09d6040c0255e98460e4d\", element=\"f.8C95BE7C62E83DEAB6FC3F13068B7789.d.8B08AD34387C3B1BC66859BCD854E96F.e.39\")>]\n\n    def check_peviitor_job_links(self, expected_links, actual_links, job_titles, expected_elements):\n        if not expected_links and not actual_links:\n            msg = f\"Scraper is not grabbing any job links\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occured\"\n    \n>       peviitor_actual_links, peviitor_job_titles, peviitor_expected_elements = self.get_different_items(expected_links, actual_links, job_titles, expected_elements)\nE       ValueError: not enough values to unpack (expected 3, got 2)\n\ntests/Test_Selenium_Suite/seleniumutils.py:244: ValueError"}, "steps": [{"name": "Step 1: Get job links from the scraper", "status": "passed", "start": 1712467030220, "stop": 1712467030220}, {"name": "Step 2: Get job links from the Peviitor", "status": "passed", "start": 1712467030220, "stop": 1712467030220}, {"name": "Step 3: Compare job links from the Peviitor against the company c4media website", "status": "broken", "statusDetails": {"message": "ValueError: not enough values to unpack (expected 3, got 2)\n", "trace": "  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_Selenium_Suite/test_c4media.py\", line 133, in test_c4media_link_ui\n    testutils.check_peviitor_job_links(job_links_peviitor, job_links_scraper, job_titles_peviitor, job_links_elements)\n  File \"/home/runner/work/scrapers_Larisa_M16/scrapers_Larisa_M16/tests/Test_Selenium_Suite/seleniumutils.py\", line 244, in check_peviitor_job_links\n    peviitor_actual_links, peviitor_job_titles, peviitor_expected_elements = self.get_different_items(expected_links, actual_links, job_titles, expected_elements)\n"}, "attachments": [{"name": "Peviitor Expected Results", "source": "ef9ca264-795e-464a-ac9a-587421773216-attachment.attach"}, {"name": "Scraper Actual Results", "source": "948355ab-1c65-4eaa-9471-d4572c0393b7-attachment.attach"}], "start": 1712467030220, "stop": 1712467030220}], "start": 1712467030220, "stop": 1712467030220, "uuid": "17a2df32-7ef7-4b5d-93ac-4ab6d0c5afc1", "historyId": "afe0bb4538a3fcbd5777115d2403ae10", "testCaseId": "afe0bb4538a3fcbd5777115d2403ae10", "fullName": "Test_Selenium_Suite.test_c4media#test_c4media_link_ui", "labels": [{"name": "tag", "value": "ui"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_Selenium_Suite"}, {"name": "suite", "value": "test_c4media"}, {"name": "host", "value": "fv-az1202-671"}, {"name": "thread", "value": "2063-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Selenium_Suite.test_c4media"}]}